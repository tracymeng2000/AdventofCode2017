#include <iostream>
#include <string>
#include <vector>
using namespace std;

int convtToInt(char c){
	return (c - '0');
}

void swap(char& a, char& b){
	char temp = a;
	a = b;
	b = temp;
}

void reverse(vector<char>& v, int start, int end){
	while(start < end){
		swap (v[start], v[end]);
		start++;
		end--;
	}
}

void rotateOne(vector<char>& v){
	reverse(v, 1, v.size() - 1);
	reverse(v, 0, v.size() -1);
}

int main(){
	string number;
	number = "111831362354551173134957758417849716877188716338227121869992652972154";
	number += "65163229667646428526117162589288859873872192535747924948688637527974165122468664264726797944";
	number += "59398366732534464894287614868288447138161984148527699424597669219287355918927236198459831172";
	number += "83575762694758223956262583556675379533479458964152461973321432768858165818549484229241869657";
	number += "725166769662249574889435227698271439423511175653875622976121749344756734658248245212273242115";
	number += "488961818719828258936653236351924292251821352389471971641957941593141159982696396228218461855";
	number += "752555358856127582128823657548151545741663495182446281491763249374581774426225822474112338745";
	number += "629194213976328762985884127324443984163571711941113986826168921187567861288268744663142867866";
	number += "165546795621466134333541274633769865956692539151971953651886381195877638919355216642731848659";
	number += "649263217258599456646635412623461138792945854536154976732167439355548965778313264824237176152";
	number += "196614333748919711422188148687299757751955297978137561935963366682742334867854892581388263132";
	number += "968999722366495346854828316842352829827989419393594846893842746149235681921951476132585199265";
	number += "366836257322121681471877187847219712325933714149151568922456111149524629995933156924418468567";
	number += "649494728828858254296824372929211977446729691143995333874752448315632185286348657293395339475";
	number += "256796591968717487615896959976413637422536563273537972841783386358764761364989261322293887361";
	number += "558128521915542454126546182855197637753115352541578972298715522386683914777967729562229395936";
	number += "593272269661295295223113186683594678533511783187422193626234573849881185849626389774394351115";
	number += "527451886962844431947188429195191724662982411619815811652741733744864411666766133951954595344";
	number += "837179635668177845937578575117168875754181523584442699384167111317875138179567939174589917894";
	number += "597492816476662186746837552978671142265114426813792549412632291424594239391853358914643327549";
	number += "192165466628737614581458189732579814919468795493415762517372227862614224911844744711698557324";
	number += "454211123571327224554259626961741919243229688684838813912553397698937237114287944446722919198";
	number += "743189848428399356842626198635297851274879128322358195585284984366515428245928111112613638341";
	number += "345371";

	vector<char> v;
	int half = number.size() / 2;
	int sum = 0;
	for(int i = 0; i < number.size(); i++){
		v.push_back(number[i]);
	}

	for(int i = 0; i < v.size(); i++){
		if(v[0] == v[half]){
			sum += convtToInt(v[0]);
		}
		rotateOne(v);
	}

	cout << "The sum of all digits that match the next is " << sum << endl;
}

//rotation 